pipeline {
    agent {
        label 'local'
    }
    
    environment {
        VERSION = "${BUILD_NUMBER}"
        REGISTRY = 'docker.io'
        USERNAME = 'toanndcloud' // Thay b·∫±ng Docker Hub username c·ªßa b·∫°n
    }
    
    stages {
        stage('üì• Checkout') {
            steps {
                echo 'üîÑ L·∫•y code t·ª´ repository...'
                sh 'pwd && ls -la'
                sh 'chmod +x scripts/*.sh'
                echo "Current branch: ${env.GIT_BRANCH}"
            }
        }
        
       
        }
        
        stage('üì§ Push Images') {
            when {
                anyOf {
                    branch 'main'
                    branch 'master'
                }
            }
            steps {
                echo 'üì§ Push images l√™n registry...'
                script {
                    // Ch·ªâ push khi ·ªü main branch
                    sh './scripts/push-images.sh ${VERSION} ${REGISTRY} ${USERNAME} || echo "‚ö†Ô∏è Push failed"'
                }
            }
        }
        
        stage('üöÄ Deploy to Kubernetes') {
            when {
                anyOf {
                    branch 'main'
                    branch 'master'
                }
            }
            steps {
                echo 'üöÄ Deploy l√™n Kubernetes...'
                script {
                    // Ch·ªâ deploy khi c√≥ kubectl
                    sh '''
                        if command -v kubectl >/dev/null 2>&1; then
                            ./scripts/deploy-k8s.sh || echo "‚ö†Ô∏è Deploy failed"
                        else
                            echo "‚ö†Ô∏è kubectl not found, skipping deployment"
                        fi
                    '''
                }
            }
        }
    }
    
    post {
        always {
            echo 'üßπ Cleanup...'
            sh 'docker image prune -f || echo "Cannot cleanup Docker images"'
        }
        success {
            echo 'üéâ Pipeline ho√†n th√†nh th√†nh c√¥ng!'
            sh 'docker images | grep microservices || echo "No images found"'
        }
        failure {
            echo '‚ùå Pipeline th·∫•t b·∫°i!'
        }
    }
}